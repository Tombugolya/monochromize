{"version":3,"sources":["utils/StringUtils.ts","components/Form/FormLabel.tsx","utils/FetchUtils.ts","contexts/DataContext.tsx","contexts/ThemeContext.tsx","components/Form/FormGroup.tsx","components/TopBar/Title.tsx","components/TopBar/ThemeSwitch.tsx","components/TopBar/TopBar.tsx","components/Content/Gallery.tsx","components/Content/TextBox.tsx","components/Content/Content.tsx","components/GlobalStyles.tsx","components/Monochromize.tsx","tests/reportWebVitals.ts","index.tsx"],"names":["StringUtils","s","charAt","toUpperCase","slice","FormLabel","name","theme","useTheme","Form","Group","css","width","Label","color","colors","secondary","SU","capitalize","Control","required","type","placeholder","Feedback","FetchUtils","data","Object","keys","length","fetch","this","lambdaUrl","method","body","JSON","stringify","response","console","log","json","parse","DataContext","createContext","DataContextProvider","children","useState","imageSource","albumName","albumDescription","setData","Provider","value","ThemeContext","lightTheme","primary","darkTheme","ThemeContextProvider","setTheme","FormGroup","fields","validated","setValidated","useContext","formStyle","display","flexDirection","justifyContent","alignItems","margin","handleSubmit","event","a","form","currentTarget","preventDefault","checkValidity","formData","FormData","invokeLambda","Array","from","entries","array","url","info","description","id","noValidate","onSubmit","map","val","index","Button","variant","Title","backgroundColor","ThemeSwitch","onClick","size","TopBar","Gallery","Col","Carousel","controls","Item","filter","className","src","alt","memo","TextBox","key","textAlign","Content","Row","style","GlobalStyles","styles","Monochromize","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1b84ed5.chunk.js","sourcesContent":["export default class StringUtils {\n  static capitalize(s: string): string {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n}\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx, useTheme } from '@emotion/react';\nimport SU from '../../utils/StringUtils';\nimport { Form } from 'react-bootstrap';\nimport { FC } from 'react';\nimport { ThemeProps } from '../../contexts/ThemeContext';\n\ntype TFormLabel = FC<{\n  key: number;\n  name: string;\n}>;\n\nexport const FormLabel: TFormLabel = ({ name }) => {\n  const theme = useTheme() as ThemeProps;\n  return (\n    <Form.Group css={{ width: '60%' }}>\n      <Form.Label css={{ color: theme.colors.secondary }}>\n        {SU.capitalize(name)}\n      </Form.Label>\n      <Form.Control\n        required\n        name={name}\n        type=\"text\"\n        placeholder={`Enter ${SU.capitalize(name)}`}\n      />\n      <Form.Control.Feedback type=\"invalid\">\n        Please provide an {name} name\n      </Form.Control.Feedback>\n    </Form.Group>\n  );\n};\n\nexport default FormLabel;\n","export default class FetchUtils {\n  private static lambdaUrl =\n    'https://y22tcg9j99.execute-api.us-east-1.amazonaws.com/beta';\n\n  static async invokeLambda(data: Object) {\n    if (!Object.keys(data).length) return;\n    let response;\n    try {\n      response = await fetch(this.lambdaUrl, {\n        method: 'POST',\n        body: JSON.stringify(data),\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    return response ? JSON.parse(await response.json()) : null;\n  }\n}\n","import { createContext, useState, FC, ReactNode } from 'react';\n\ntype TDataContextProvider = FC<{ children: ReactNode }>;\nexport interface DataState {\n  imageSource: string;\n  albumName: string;\n  albumDescription: string;\n}\ninterface TDataContext {\n  data: DataState;\n  setData: (val: DataState) => void;\n}\n\nexport const DataContext = createContext<TDataContext>(null);\n\nexport const DataContextProvider: TDataContextProvider = ({ children }) => {\n  const [data, setData] = useState<DataState>({\n    imageSource:\n      'https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png',\n    albumName: '',\n    albumDescription: '',\n  });\n  return (\n    <DataContext.Provider\n      value={{\n        data,\n        setData,\n      }}\n    >\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport default DataContextProvider;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx, ThemeProvider } from '@emotion/react';\nimport { createContext, FC, ReactNode, useState } from 'react';\n\ntype TThemeContextProvider = FC<{ children: ReactNode }>;\nexport interface ThemeProps {\n  colors: { primary: string; secondary: string };\n}\ntype ThemeState = 'light' | 'dark';\n\ninterface TThemeContext {\n  theme: ThemeState;\n  setTheme: (val: ThemeState) => void;\n}\nexport const ThemeContext = createContext<TThemeContext>(null);\n\nconst lightTheme: ThemeProps = {\n  colors: {\n    primary: 'white',\n    secondary: 'black',\n  },\n};\nconst darkTheme: ThemeProps = {\n  colors: {\n    primary: 'black',\n    secondary: 'white',\n  },\n};\n\nexport const ThemeContextProvider: TThemeContextProvider = ({ children }) => {\n  const [theme, setTheme] = useState<ThemeState>('light');\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <ThemeContext.Provider value={{ theme, setTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default ThemeContextProvider;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx, css } from '@emotion/react';\nimport { FC, FormEvent, useContext, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport FormLabel from './FormLabel';\nimport FetchUtils from '../../utils/FetchUtils';\nimport { DataContext } from '../../contexts/DataContext';\nimport { ThemeContext } from '../../contexts/ThemeContext';\n\ntype TFormGroup = FC<{ fields?: string[] }>;\n\nexport const FormGroup: TFormGroup = ({ fields = ['artist', 'album'] }) => {\n  const [validated, setValidated] = useState(false);\n  const { setData } = useContext(DataContext);\n  const { theme } = useContext(ThemeContext);\n  const formStyle = css({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    margin: '0 auto',\n  });\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity()) {\n      const formData = new FormData(form);\n      const data = await FetchUtils.invokeLambda(\n        Array.from(formData.entries(), (array) => array[1])\n      );\n      if (data) {\n        setData({\n          imageSource: data.url,\n          albumName: data.info,\n          albumDescription: data.description,\n        });\n      }\n    }\n    setValidated(true);\n  };\n\n  return (\n    <div id=\"form\">\n      <Form\n        css={formStyle}\n        noValidate\n        validated={validated}\n        onSubmit={handleSubmit}\n      >\n        {fields.map((val: string, index) => (\n          <FormLabel name={val} key={index} />\n        ))}\n        <Button type=\"submit\" variant={theme === 'light' ? 'dark' : 'light'}>\n          Monochromize\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default FormGroup;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx } from '@emotion/react';\nimport { useTheme } from '@emotion/react';\nimport { ThemeProps } from '../../contexts/ThemeContext';\nimport { FC } from 'react';\n\nconst Title: FC = () => {\n  const theme = useTheme() as ThemeProps;\n  return (\n    <h1>\n      <span\n        css={{\n          color: theme.colors.secondary,\n          backgroundColor: theme.colors.primary,\n        }}\n      >\n        _Monochro\n      </span>\n      <span\n        css={{\n          color: theme.colors.primary,\n          backgroundColor: theme.colors.secondary,\n        }}\n      >\n        mize\n      </span>\n    </h1>\n  );\n};\n\nexport default Title;\n","import { MoonFill, SunFill } from 'react-bootstrap-icons';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst ThemeSwitch = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  return (\n    <div>\n      {theme === 'light' ? (\n        <Button variant=\"light\" onClick={() => setTheme('dark')}>\n          <MoonFill size={15} />\n        </Button>\n      ) : (\n        <Button variant=\"dark\" onClick={() => setTheme('light')}>\n          <SunFill size={15} />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ThemeSwitch;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx } from '@emotion/react';\nimport { FC } from 'react';\nimport Title from './Title';\nimport ThemeSwitch from './ThemeSwitch';\n\nconst TopBar: FC = () => {\n  return (\n    <div\n      css={{ display: 'flex', justifyContent: 'space-between', margin: '2%' }}\n    >\n      <Title />\n      <ThemeSwitch />\n    </div>\n  );\n};\n\nexport default TopBar;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx } from '@emotion/react';\nimport React, { memo, useContext } from 'react';\nimport { Carousel, Col } from 'react-bootstrap';\nimport { DataContext } from '../../contexts/DataContext';\n\nconst Gallery = () => {\n  const { data } = useContext(DataContext);\n\n  return (\n    <Col>\n      <div id=\"carousel\">\n        <Carousel\n          id=\"carousel-slides\"\n          css={{ width: '80%', margin: '2% auto' }}\n          controls={false}\n        >\n          <Carousel.Item>\n            <img\n              css={{ filter: 'grayscale(100%)' }}\n              id=\"album-img\"\n              className=\"d-block w-100\"\n              src={data.imageSource}\n              alt=\"Monochromized album art\"\n            />\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    </Col>\n  );\n};\n\nexport default memo(Gallery);\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx, useTheme } from '@emotion/react';\nimport { FC, memo, useContext } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { DataContext, DataState } from '../../contexts/DataContext';\nimport { ThemeProps } from '../../contexts/ThemeContext';\n\ntype TTextBox = FC<{ val: keyof DataState }>;\nconst TextBox: TTextBox = ({ val }) => {\n  const { data } = useContext(DataContext);\n  const theme = useTheme() as ThemeProps;\n  function getTitle(key: keyof DataState): string {\n    if (key === 'albumName') return 'Album Title';\n    if (key === 'albumDescription') return 'Description';\n  }\n\n  return (\n    <Col>\n      <div\n        css={{ textAlign: 'center', color: theme.colors.secondary }}\n        className=\"d-block w-75\"\n      >\n        {data[val] && <h3>{getTitle(val)}</h3>}\n        <h4>{data[val]}</h4>\n      </div>\n    </Col>\n  );\n};\n\nexport default memo(TextBox);\n","import { Row } from 'react-bootstrap';\n\nimport Gallery from './Gallery';\nimport TextBox from './TextBox';\n\nconst Content = () => {\n  return (\n    <Row style={{ margin: 0 }}>\n      <TextBox val={'albumName'} />\n      <Gallery />\n      <TextBox val={'albumDescription'} />\n    </Row>\n  );\n};\n\nexport default Content;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx, css, useTheme } from '@emotion/react';\nimport React from 'react';\nimport { Global } from '@emotion/react';\nimport { ThemeProps } from '../contexts/ThemeContext';\n\nconst GlobalStyles = () => {\n  const theme = useTheme() as ThemeProps;\n  return (\n    <Global\n      styles={css`\n        body {\n          background-color: ${theme.colors.primary};\n        }\n      `}\n    />\n  );\n};\n\nexport default GlobalStyles;\n","/** @jsxImportSource @emotion/react */\n// eslint-disable-next-line\nimport { jsx } from '@emotion/react';\nimport { FC } from 'react';\nimport FormGroup from './Form/FormGroup';\nimport TopBar from './TopBar/TopBar';\nimport Content from './Content/Content';\nimport GlobalStyles from './GlobalStyles';\n\ninterface Properties {\n  imageSource?: string;\n  fields?: string[];\n}\ntype TMonochromize = FC<Properties>;\n\nconst Monochromize: TMonochromize = () => {\n  return (\n    <div>\n      <GlobalStyles />\n      <TopBar />\n      <FormGroup />\n      <Content />\n    </div>\n  );\n};\n\nexport default Monochromize;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Monochromize from './components/Monochromize';\nimport reportWebVitals from './tests/reportWebVitals';\nimport DataContextProvider from './contexts/DataContext';\nimport ThemeContextProvider from './contexts/ThemeContext';\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <Router>\n        <DataContextProvider>\n          <ThemeContextProvider>\n            <Monochromize />\n          </ThemeContextProvider>\n        </DataContextProvider>\n      </Router>\n    </React.StrictMode>\n  );\n}\nReactDOM.render(<App />, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}